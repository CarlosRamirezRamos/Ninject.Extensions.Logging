<?xml version="1.0" encoding="utf-8"?>
<project name="Ninject.NLog3" default="all">
	<property name="product.assembly.NLog3" value="${product.name}.NLog3.dll" overwrite="false"/>
		<property name="product.assembly.test.NLog3" value="${product.name}.NLog3.Test.dll" overwrite="false"/>

	<target name="buildNLog3" unless="${string::contains(build.platform, 'silverlight-4.0-wp') or string::contains(build.platform, 'silverlight-3.0') or string::contains(build.platform, 'silverlight-2.0')}">
		<property name="packagepath.NLog3" value="nlog.3.*/lib/${nuget.platform}" unless="${string::contains(build.platform, 'mono')}" />
	    <property name="packagepath.NLog3" value="nlog.3.*/lib/net35" if="${string::contains(build.platform, 'mono')}" />
	    <property name="packagepath.NLog2" value="nlog.3.*/lib/net40" if="${build.platform == 'net-4.0'}" />
	    <property name="packagepath.NLog3" value="nlog.3.*/lib/net45" if="${string::contains(build.platform, 'net-4.5')}" />
		
		<property name="current.path.lib.NLog3" value="${path.packages}/${packagepath.NLog3}" />

		<copy todir="${current.path.build}/NLog3/lib">
			<fileset basedir="${path.packages}">
				<include name="${packagepath.NLog3}/*.dll"/>
				<include name="${packagepath.NLog3}/*.xml"/>
			</fileset>
		</copy>	
			
		<csc noconfig="true" warnaserror="true" target="library" debug="${build.debug}" optimize="${build.optimize}" define="${build.defines}" 
			 output="${current.path.build}/NLog3/${product.assembly.NLog3}" 
			 doc="${current.path.build}/NLog3/${product.name}.NLog3.xml" keyfile="${path.src}/${product.keyfile}">
			<arg line="/filealign:512"/>
      <arg value="-sdk:2" if="${string::contains(build.platform, 'mono-3.5')}"/>
      <arg value="-sdk:4" if="${string::contains(build.platform, 'mono-4.0')}"/>
			<sources basedir="${path.src}">
				<include name="${build.asminfo}"/>
				<include name="${product.name}.NLog3/**/*.cs"/>
			</sources>
			<references>
				<include name="mscorlib.dll"/>
				<include name="System.dll"/>
				<include name="System.Core.dll"/>
				<include name="System.Web.dll" unless="${build.platform == 'silverlight-2.0'}"/>
				<include name="${current.path.lib.NLog3}/NLog.dll"/>
				<include name="${path.lib}/Ninject/${build.platform}/Ninject.dll"/>
				<include name="${current.path.build}/${product.assembly}"/>
			</references>
		</csc>
	</target>

	<target name="compile-NLog3-tests" depends="core compile-tests" unless="${skip.tests}" if="${not(string::contains(build.platform, 'silverlight') or build.platform == 'netcf-3.5')}">
		<property name="current.path.test.NLog3" value="${path.build}/${build.platform}/tests/NLog3"/>
		<mkdir dir="${current.path.test.NLog3}"/>

	    <property name="target" value="${current.path.test.NLog3}" />
		<call target="CopyXUnit-Target"/>
		<call target="CopyMoq-Target"/>
		<call target="CopyFluentAssertions-Target"/>
		<copy todir="${current.path.test.NLog3}" flatten="true">
			<fileset basedir="${current.path.test}">
				<include name="*.dll"/>
			</fileset>
		</copy>
		<copy todir="${current.path.test.NLog3}" flatten="true">
			<fileset basedir="${current.path.build}/NLog3">
				<include name="**/*.dll"/>
			</fileset>
		</copy>		

		<csc noconfig="true" warnaserror="true" target="library" debug="${build.debug}" optimize="${build.optimize}" define="${build.defines}"
			 output="${current.path.test.NLog3}/${product.assembly.test.NLog3}">
      <arg value="-sdk:2" if="${string::contains(build.platform, 'mono-3.5')}"/>
      <arg value="-sdk:4" if="${string::contains(build.platform, 'mono-4.0')}"/>
			<sources basedir="${path.src}">
				<include name="${product.name}.NLog3.Test/**/*.cs"/>
			</sources>
			<references basedir="${current.path.test.NLog3}">
				<include name="mscorlib.dll"/>
				<include name="System.dll"/>
				<include name="System.Core.dll"/>
				<include name="Moq.dll"/>
				<include name="xunit.dll"/>
				<include name="FluentAssertions.dll"/>
				<include name="${current.path.lib.NLog3}/NLog.dll"/>
				<include name="${product.assembly}"/>
				<include name="${product.assembly.NLog3}"/>
				<include name="${current.path.test}/${product.assembly.test}"/>
				<include name="${path.lib}/Ninject/${build.platform}/Ninject.dll"/>
			</references>
			<nowarn>
				<warning number="1584"/>
			</nowarn>
		</csc>
	</target>
 
	<target name="testNLog3" depends="compile-NLog3-tests" unless="${skip.tests}" if="${not(string::contains(build.platform, 'silverlight') or build.platform == 'netcf-3.5')}">
		<exec 
		    program="${path.tools.xunit.console}" 
			workingdir="${current.path.test.NLog3}" 
			failonerror="true"
			if="${not(string::contains(build.platform, 'mono')) or teamcity}">
			<arg value="${product.assembly.test.NLog3}" />
			<arg value="/html" />
			<arg path="${current.path.test.NLog3}/results.html" />
		</exec>

		<if test="${string::contains(build.platform, 'mono') and not(teamcity)}">
			<exec 
				program="${framework::get-runtime-engine(framework::get-target-framework())}" 
    			workingdir="${current.path.test.NLog3}" 
				failonerror="true">
				<arg value="${path.tools.xunit.console}" />
				<arg value="${product.assembly.test.NLog3}" />
				<arg value="/html" />
				<arg path="${current.path.test.NLog3}/results.html" />
			</exec>
		</if>
	</target>
	
	<target name="compile-silverlight-tests-NLog3" depends="core" unless="${skip.tests or skip.silverlightTests}" if="${string::contains(build.platform, 'silverlight') and not(string::contains(build.platform, 'silverlight-4.0-wp') or string::contains(build.platform, 'silverlight-3.0') or string::contains(build.platform, 'silverlight-2.0'))}">
		<property name="current.path.test.NLog3" value="${path.build}/${build.platform}/tests/NLog3"/>
		<property name="product.assembly.silverlighttest.NLog3" value="${product.name}.NLog3.SilverlightTests.xap"/>
		<mkdir dir="${current.path.test}"/>

	    <property name="target" value="${current.path.test.NLog3}" />
		<call target="CopyXUnit-SL-Target"/>
		<call target="CopyMoq-SL-Target"/>
		<call target="CopyFluentAssertions-SL-Target"/>
		<copy todir="${current.path.test.NLog3}" flatten="true">
			<fileset basedir="${current.path.build}">
				<include name="*.dll"/>
				<include name="lib/*.dll"/>
			</fileset>
		</copy>
		<copy todir="${current.path.test.NLog3}" flatten="true">
			<fileset basedir="${current.path.test}">
				<include name="*.dll"/>
			</fileset>
		</copy>
		<copy todir="${current.path.test.NLog3}" flatten="true">
			<fileset basedir="${current.path.build}/NLog3">
				<include name="**/*.dll"/>
			</fileset>
		</copy>		
		
		<csc noconfig="true" warnaserror="true" target="library" debug="${build.debug}" optimize="${build.optimize}" define="${build.defines}"
			 output="${current.path.test.NLog3}/${product.name}.NLog3.SilverlightTests.dll">
			<sources basedir="${path.src}">
				<include name="${product.name}.Tests/**/*.cs"/>
				<include name="${product.name}.NLog3.Test/**/*.cs"/>
				<include name="${product.name}.NLog3.SilverlightTests/*.cs"/>
				<include name="${product.name}.NLog3.SilverlightTests/Properties/*.cs"/>
				<exclude name="${product.name}.Tests/MSTestAttributes/*.cs"/>
				<exclude name="${product.name}.Tests/Properties/*.cs"/>
				<exclude name="${product.name}.NLog3.Test/Properties/*.cs"/>
			</sources>
			<references basedir="${current.path.test.NLog3}">
				<include name="mscorlib.dll"/>
				<include name="System.dll"/>
				<include name="System.Core.dll"/>
				<include name="System.Windows.dll"/>
				<include name="System.Windows.Browser.dll"/>
				<include name="System.Net.dll"/>
				<include name="Microsoft.Phone.dll" if="${string::contains(build.platform, 'wp7')}"/>
				<include name="Microsoft.Phone.Interop.dll" if="${string::contains(build.platform, 'wp7')}"/>
				<include name="Moq.Silverlight.dll" unless="${string::contains(build.platform, 'wp7')}"/>
				<include name="Castle.Core.dll" if="${string::contains(build.platform, 'silverlight-4.0') or string::contains(build.platform, 'silverlight-5.0')}"/>
				<include name="Castle.Core-Silverlight.dll" unless="${string::contains(build.platform, 'silverlight-4.0') or string::contains(build.platform, 'silverlight-5.0')}"/>
				<include name="Castle.DynamicProxy-Silverlight.dll" unless="${build.platform == 'silverlight-4.0' or build.platform == 'silverlight-5.0'}"/>
				<include name="xunit.runner.silverlight.dll"/>
				<include name="xunit-silverlight.dll"/>
				<include name="FluentAssertions.Silverlight.dll"/>
				<include name="${current.path.lib.NLog3}/NLog.dll"/>
				<include name="${product.assembly}"/>
				<include name="${product.assembly.NLog3}"/>
				<include name="${current.path.test}/${product.assembly.test}"/>
				<include name="${path.lib}/Ninject/${build.platform}/Ninject.dll"/>
			</references>
			<nowarn>
				<warning number="1584"/>
			</nowarn>
		</csc>
		<zip zipfile="${current.path.test.NLog3}/${product.assembly.silverlighttest.NLog3}">
			<fileset basedir="${current.path.test.NLog3}">
				<include name="*.dll" />
			</fileset>
			<fileset basedir="${path.src}/${product.name}.NLog3.SilverlightTests">
				<include name="AppManifest.xaml"/>
			</fileset>
		</zip>
	</target>

	<target name="silverlight-test-NLog3" depends="compile-silverlight-tests-NLog3" unless="${skip.tests or skip.silverlightTests}" if="${string::contains(build.platform, 'silverlight') and not(string::contains(build.platform, 'silverlight-4.0-wp') or string::contains(build.platform, 'silverlight-3.0') or string::contains(build.platform, 'silverlight-2.0'))}">
	    <if test="${not(skip.silverlightWPTests) or not(string::contains(build.platform, 'wp'))}">
			<property name="cmdLine" value='-x"${product.assembly.silverlighttest.NLog3}" --teamcity --debug' if="${teamcity}"/>
			<property name="cmdLine" value='-x"${product.assembly.silverlighttest.NLog3}"' unless="${teamcity}"/>
			<exec program="${path.tools.statlight}" workingdir="${current.path.test.NLog3}" commandline="${cmdLine}" failonerror="true" unless="${string::contains(build.platform, 'wp')}" />
			<exec program="${path.tools.statlight}" workingdir="${current.path.test.NLog3}" commandline="${cmdLine} --UsePhoneEmulator" failonerror="true" if="${string::contains(build.platform, 'wp')}" />
		</if>
	</target>
	
	<target name="nuget-nlog3">
		<property name="nuget.sourcedir" value="${path.base}/nuget-nlog3" />
		<property name="nuget.basedir" value="${path.base}/build/nuget-nlog3" />
		<property name="nuget.platforms" value="net-3.5-client,net-4.0-client,net-4.5,silverlight-5.0,silverlight-4.0,silverlight-3.0,silverlight-2.0,silverlight-4.0-wp7,silverlight-4.0-wp71" />
		<property name="nuget.name" value="${product.name}.nlog3" />
		<property name="nuget.releaseDirectory" value="${path.build}\${build.platform}\release\nlog3" dynamic="true"/>
		<property name="nuget.dependencies" value="Ninject.Extensions.Logging" />
		<property name="nuget.additionalFiles" value="-" />
		<property name="nuget.packageName" value="${nuget.name}${product.packagePostfix}" />	
		<property name="nuget.symbol.basedir" value="${path.base}/build/nuget-nlog3_symbol" />
		<property name="nuget.project" value="${path.src}/${product.name}.NLog3/${product.name}.NLog3.csproj" />
	
		<property name="nant.settings.currentframework" value="net-4.0"/>
		<msbuild project="${nuget.project}" />
		<call target="nuget-run"/>
	</target>
</project>